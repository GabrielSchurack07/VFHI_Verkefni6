@use "./config.scss" as config;

main {
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: 100%;
  gap: var(--spacing);
  justify-items: center;
  width: var(--width-offset);
  max-width: var(--max-width);
}

main > section { width: 100%; }

.wrapper {
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: 100%;
  gap: var(--vertical-space);
  justify-items: center;
  width: 100%;
  min-height: 100vh;
  margin-top: var(--height-nav);
  background-color: var(--color-background-primary);
}

.wrapper main { 
    flex: 1; 
}



@if config.$grid {
  :root {
    --grid-color: hsl(255deg 75% 75% / 25%);
    --grid-repeating-width: calc(100% / var(--columns));
    --grid-column-width: calc((100% / var(--columns)) - var(--gutter));
    --grid-background-width: calc(100% + var(--gutter));
    --grid-background-columns: repeating-linear-gradient(
      to right,
      var(--grid-color),
      var(--grid-color) var(--grid-column-width),
      transparent var(--grid-column-width),
      transparent var(--grid-repeating-width)
    );
  }

  html { position: relative; }

  html::before {
    position: absolute;
    inset: 0;
    z-index: 1000;
    width: calc(100% - (2 * var(--offset)));
    max-width: var(--max-width);
    min-height: 100vh;
    margin: 0 auto;
    pointer-events: none;
    content: "";
    background-image: var(--grid-background-columns);
    background-size: var(--grid-background-width) 100%;
  }
}